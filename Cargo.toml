[package]
authors = ["realwangliqiu <realwangliqiu@proton.me>"]
edition = "2021"
name = "redis-demo"
rust-version = "1.85"
version = "0.4.1"
license = "MIT"
readme = "README.md"
documentation = "https://docs.rs/mini-redis/0.4.0/mini-redis/"
repository = "https://github.com/tokio-rs/mini-redis"
description = """
An incomplete implementation of a Rust client and server. Used as a
larger example of an idiomatic Tokio application.
"""

[[bin]]
name = "redis-cli"
path = "src/bin/cli.rs"

[[bin]]
name = "redis-server"
path = "src/bin/server_proxy.rs"

[dependencies]
async-stream = "0.3"
atoi = "2.0"
bytes = "1.5"
clap = { version = "4.2", features = ["derive"] }
tokio = { version = "1.32", features = ["full"] }
tokio-stream = "0.1"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
# Implements the types defined in the OTel spec
opentelemetry = { version = "0.20", optional = true }
# Integration between the tracing crate and the opentelemetry crate
tracing-opentelemetry = { version = "0.21", optional = true }
# Provides a "propagator" to pass along an XrayId across services
opentelemetry-aws = { version = "0.8", optional = true }
# Allows you to send data to the OTel collector
opentelemetry-otlp = { version = "0.13", optional = true }

[dev-dependencies]
# Enable test-utilities in dev mode only. This is mostly for tests.
tokio = { version = "1", features = ["test-util"] }

[features]
otel = ["dep:opentelemetry", "dep:tracing-opentelemetry", "dep:opentelemetry-aws", "dep:opentelemetry-otlp"]
